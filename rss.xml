<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peter's Playground</title>
    <link>http://peters-playground.com/</link>
    <atom:link href="http://peters-playground.com/rss.xml" rel="self" type="application/rss+xml" />
    <description>专注前端技术</description>
    <language>zh_CN</language>
    <pubDate>Wed, 03 Jul 2013 00:52:25 +0100</pubDate>
    <lastBuildDate>Wed, 03 Jul 2013 00:52:25 +0100</lastBuildDate>

    
    <item>
      <title>Stay-focused App</title>
      <link>http://peters-playground.com/2013/07/stay-focused-app</link>
      <pubDate>02 Jul 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/07/stay-focused-app</guid>
      <description>&lt;p&gt;Stay-focused App 是一款使用 HTML CSS Javascript 编写的 Mac 系统下的开源效率软件, 通过 &lt;a href=&quot;http://www.sentenzadesktop.com/&quot;&gt;Sentenza Desktop&lt;/a&gt; 封装。制作这款软件的初衷是因为发现最适合自己的工作方法是用笔记本将一个任务拆分成多个子任务，列出先后顺序把大脑中的思路清晰化，不盲目干活，同时利用计时器辅助执行，避免浪费时间或者在一个地方纠缠太久。试用过很多软件都不顺手，自己动手写一个，todo list 使用的是 &lt;a href=&quot;http://web.koesbong.com&quot;&gt;Koes Bong&lt;/a&gt; 写过的 &lt;a href=&quot;http://web.koesbong.com/2011/01/24/sortable-and-editable-to-do-list-using-html5s-localstorage/&quot;&gt;Sortable and Editable To-do List&lt;/a&gt;，其他部分是自己折腾的，需要功能大部分都已经实现，发布出来与大家分享。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/P233/Stay-focused-App&quot;&gt;&lt;img src=&quot;http://peters-playground.com/Stay-focused-App/stay-focused-app.png&quot; alt=&quot;Stay-focused App&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href=&quot;https://github.com/P233/Stay-focused-App&quot;&gt;https://github.com/P233/Stay-focused-App&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://peters-playground.com/Stay-focused-App/stay-focused-app.zip&quot;&gt;http://peters-playground.com/Stay-focused-App/stay-focused-app.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Peter 的 Javascript 是菜鸟水平，一边学一边写，处理不当的地方请不要客气指出来，这对我来说是难得的学习机会。如果大家发现问题，或者有想法建议，请 feel free &lt;a href=&quot;https://github.com/P233/Stay-focused-App/issues/new&quot;&gt;提交 issues&lt;/a&gt; 或者 pull request。&lt;/p&gt;

&lt;h2&gt;使用说明&lt;/h2&gt;

&lt;h3&gt;偏好设置&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;点击顶部的 Project bar 开启／关闭 Preferences 面板，可设置项目名称、截止时间等等；&lt;/li&gt;
&lt;li&gt;Date Format, Time Format 用于配置 date &amp;amp; time picker 的时间格式，需要重启软件才可生效；&lt;/li&gt;
&lt;li&gt;开启 Voice Notice 后，当剩余时间是 5 的倍数时系统报时提醒，比如 &quot;15 minutes left&quot;，&quot;Only 5 minutes left&quot;；&lt;/li&gt;
&lt;li&gt;开启 Metronome 后，每间隔一段时间有滴嗒声提醒，3 Mins 的意思是“当剩余时间是 3 的倍数时提醒”，而不是从计时后的第 3 分钟开始；&lt;/li&gt;
&lt;li&gt;Clear All Data 清除所有 local storage 数据，包括偏好设置；&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;使用&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Project bar 背景显示项目的剩余时间／进度条，每隔 10 分钟更新一次（所以项目截止提醒会有误差）；&lt;/li&gt;
&lt;li&gt;可输入的倒计时时间为 1 - 60 分钟；&lt;/li&gt;
&lt;li&gt;上下拖拽 task 条目变更顺序；&lt;/li&gt;
&lt;li&gt;向右拖拽 task 条目超过窗口一半时删除此条目；&lt;/li&gt;
&lt;li&gt;点击 task 条目编辑此条目；&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Credits&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Sortable and Editable To-do List &lt;a href=&quot;http://web.koesbong.com/2011/01/24/sortable-and-editable-to-do-list-using-html5s-localstorage/&quot;&gt;http://web.koesbong.com/2011/01/24/sortable-and-editable-to-do-list-using-html5s-localstorage/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mobiscroll Datetime Picker &lt;a href=&quot;http://demo.mobiscroll.com/datetime&quot;&gt;http://demo.mobiscroll.com/datetime&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Metronome Sound &lt;a href=&quot;http://soundbible.com/914-Metronome.html&quot;&gt;http://soundbible.com/914-Metronome.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cuckoo Clock Sound &lt;a href=&quot;http://soundbible.com/1261-Cuckoo-Clock.html&quot;&gt;http://soundbible.com/1261-Cuckoo-Clock.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Titillium Text Font &lt;a href=&quot;http://www.fontsquirrel.com/fonts/TitilliumText&quot;&gt;http://www.fontsquirrel.com/fonts/TitilliumText&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    
    <item>
      <title>Symphony CMS debug bookmarklet</title>
      <link>http://peters-playground.com/2013/06/symphony-cms-debug-bookmarklet</link>
      <pubDate>22 Jun 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/06/symphony-cms-debug-bookmarklet</guid>
      <description>&lt;p&gt;最近一个星期把时间都花在 Symphony CMS 上了，经常需要查看 &lt;code&gt;?debug&lt;/code&gt; 页面，所以写了个 bookmarklet 一键切换：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;javascript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;?debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;?debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用方法：将这个链接 &lt;a href=&quot;javascript:(function(){var e=location.toString();if(e.slice(-6)!=&#39;?debug&#39;){location.href=e+&#39;?debug&#39;}else{location.href=e.substring(0,e.length-6)}})()&quot;&gt;?debug&lt;/a&gt; 拖拽到浏览器收藏夹，或者新建 bookmark，拷贝下面的 code 作为地址。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;javascript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;?debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;?debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于什么是 Bookmarklet？相信看完下面两篇文章就木有问题了：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/06/a_guide_for_writing_bookmarklet.html&quot;&gt;Bookmarklet 编写指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/javascript-ajax/create-bookmarklets-the-right-way/&quot;&gt;Create Bookmarklets – The Right Way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>3D walking robot</title>
      <link>http://peters-playground.com/2013/06/3D-working-robot</link>
      <pubDate>22 Jun 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/06/3D-working-robot</guid>
      <description>&lt;p&gt;&lt;a href=&quot;http://cdpn.io/jrguI&quot;&gt;&lt;img src=&quot;/assets/images/codepen/walking-robot.png&quot; alt=&quot;3D walking robot&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;看到大家都在写 CSS 3D 特效，也跟着写了一个会走路的 3D 机器人，展示地址：&lt;a href=&quot;http://cdpn.io/jrguI&quot;&gt;http://cdpn.io/jrguI&lt;/a&gt;，点击页面左下角 &quot;Edit this Pen&quot; 查看源码。&lt;/p&gt;

&lt;p&gt;一开始直接写 CSS 3D 效果结果越写越乱，只好推倒重来，先写完 2D 的机器人结构，主要使用的是 &lt;code&gt;position: absolute&lt;/code&gt; 定位，把需要使用的 div 都准备好，机器人每个部分的每一个面都是一个 div，也就是所使用的 &lt;code&gt;.front&lt;/code&gt; &lt;code&gt;.back&lt;/code&gt; &lt;code&gt;.left&lt;/code&gt; &lt;code&gt;.right&lt;/code&gt; &lt;code&gt;.top&lt;/code&gt; 与 &lt;code&gt;.bottom&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;第一步，给每个部位（包括最外层）添加 &lt;code&gt;transform-style: preserve-3d&lt;/code&gt; 属性激活 3D 模式（注：webkit 中这个属性可以继承，但 Firefox 中不行，所以保险的做法是给每个部位都添加这个属性）。然后配合使用 &lt;code&gt;transform: rotate3D()&lt;/code&gt; &lt;code&gt;transform: translate3D()&lt;/code&gt; 以及 &lt;code&gt;transform-origin&lt;/code&gt; 将刚刚提到的 6 个面旋转／偏移到指定位置，这样完整的 3D 机器人就成型了。&lt;/p&gt;

&lt;p&gt;在使用 &lt;code&gt;transform-origin&lt;/code&gt; 时遇到一个问题，到目前还没找到合适的解决办法。Chrome 在同时处理 &lt;code&gt;transform-origin&lt;/code&gt; 与 &lt;code&gt;transform: translate3D()&lt;/code&gt; 时不考虑偏移量，以 div 的实际长宽（应该包含 &lt;code&gt;margin&lt;/code&gt;）计算，而 Safari 处理时将偏移量也增加到 div 的长宽中，所以这个机器人在两个浏览器中胳膊，大腿的甩动位置不一样。Firefox 的处理方式与 Chrome 是相同的，IE10 3D 模式无效，应该是我的问题，没有仔细研究。&lt;/p&gt;

&lt;p&gt;然后，给机器人的每个部位都使用 &lt;code&gt;animation&lt;/code&gt; 属性设定旋转角度，四肢 X 轴，躯干和身体 Y 轴，同样需要配合 &lt;code&gt;transform-origin&lt;/code&gt;，时间函数使用 &lt;code&gt;ease-in-out&lt;/code&gt; 让动作看起来更自然，会走路的机器人就完成了。&lt;/p&gt;

&lt;p&gt;自己也是一名 CSS 3D 新手，如果大家发现错误的地方，欢迎指正 :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pure CSS Happy Hacking Keyboard</title>
      <link>http://peters-playground.com/2013/06/pure-css-keyboard</link>
      <pubDate>21 Jun 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/06/pure-css-keyboard</guid>
      <description>&lt;p&gt;&lt;a href=&quot;http://cdpn.io/qEagi&quot;&gt;&lt;img src=&quot;/assets/images/codepen/css-hhkb.png&quot; alt=&quot;Pure CSS Happy Hacking Keyboard&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;纯 CSS 写的 Happy Hacking Keyboard，展示地址：&lt;a href=&quot;http://cdpn.io/qEagi&quot;&gt;http://cdpn.io/qEagi&lt;/a&gt;，点击页面左下角 &quot;Edit this Pen&quot; 查看源码。&lt;/p&gt;

&lt;p&gt;首先，键帽周围的效果是通过 &lt;code&gt;border&lt;/code&gt; 属性实现的，一般情况下会给 div 的四边相同的 &lt;code&gt;border&lt;/code&gt; 宽度与颜色，往往忽视了这个属性的工作方式，给四边不同的宽度与颜色就会发现一些玄机（理解 CSS 画三角形也就不复杂了）。为了让键盘看起来更自然一些，键帽中间的 div 使用了阴影，让 &lt;code&gt;border&lt;/code&gt; 看上去不再是纯色的而是能感受到深浅变化。&lt;/p&gt;

&lt;p&gt;键帽侧面的字体通过 &lt;code&gt;transfrom: rotateX()&lt;/code&gt; 属性实现，此外，尝试给键盘使用 &lt;code&gt;transform: rotateX(15deg)&lt;/code&gt; 意外发现了浏览器在渲染时增加了一点点模糊效果，颜色的区分不再界限分明，看上去更舒服。不过 Firefox 渲染效果不太好，所以只保留了 &lt;code&gt;-webkit-transform&lt;/code&gt;， &lt;code&gt;-ms-transform&lt;/code&gt; 与 &lt;code&gt;-o-transform&lt;/code&gt; 三个属性，也算是一种 hack 方法吧。&lt;/p&gt;

&lt;p&gt;为了制造键帽顶部凹陷下去的效果，使用了线性渐变 &lt;code&gt;linear-gradient&lt;/code&gt;，调颜色是关键，真的花了不少时间。&lt;/p&gt;

&lt;p&gt;按键效果通过 &lt;code&gt;transform: scale()&lt;/code&gt; 缩小实现，每个按键都有独立的 class, 也就是是首字母 &lt;code&gt;k&lt;/code&gt; + 按键的 keycode，这样就可以通过 javascript 添加／删除 class 表现按下去的效果了。&lt;/p&gt;

&lt;p&gt;因为多个特效重叠使用，这个页面的性能比较糟糕。&lt;/p&gt;

&lt;p&gt;最后，感谢网友 &lt;a href=&quot;http://codepen.io/dehash&quot;&gt;dehash&lt;/a&gt; 在这个键盘的基础上添加了打字特效，欢迎大家查看 &lt;a href=&quot;http://codepen.io/dehash/pen/nEJyf&quot;&gt;http://codepen.io/dehash/pen/nEJyf&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VIM Keyboard Shortcuts</title>
      <link>http://peters-playground.com/2013/05/vim-shortcuts</link>
      <pubDate>22 May 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/05/vim-shortcuts</guid>
      <description>&lt;p&gt;&lt;a href=&quot;http://cdpn.io/jrxzE&quot;&gt;&lt;img src=&quot;/assets/images/codepen/vim-shortcuts.png&quot; alt=&quot;VIM Keyboard Shortcuts&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;开始学习 Vim，准确的说是学习使用 Sublime Text 的 vim 模式。做了一个页面收藏快捷键，展示地址：&lt;a href=&quot;http://cdpn.io/jrxzE&quot;&gt;http://cdpn.io/jrxzE&lt;/a&gt;，点击页面左下角 &quot;Edit this Pen&quot; 查看源码。&lt;/p&gt;

&lt;p&gt;遇到两个比较费神的问题，一个是 &lt;code&gt;column-count&lt;/code&gt; 属性在 Firefox 下不可将 &lt;code&gt;table&lt;/code&gt; 元素拆分成多列，Stackoverflow 提问后得知 Gecko 不支持对 table 元素动态分页，只好用 hack 将宽度限制在 &lt;code&gt;1024px&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;第二个问题还是与 Firefox 元有关，table 相关元素不支持 &lt;code&gt;position: relative&lt;/code&gt;  &lt;code&gt;position: absolute&lt;/code&gt; 等定位，解决办法是在 &lt;code&gt;td&lt;/code&gt; 内创建一个 &lt;code&gt;position: relative&lt;/code&gt; 的 div 包裹内容，详细解释请看 &lt;a href=&quot;http://stackoverflow.com/questions/5148041/does-firefox-support-position-relative-on-table-elements&quot;&gt;http://stackoverflow.com/questions/5148041/does-firefox-support-position-relative-on-table-elements&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;第三点不太重要，其他浏览器虽然可以将 table 元素拆分成多列，如果表格 &lt;code&gt;tr&lt;/code&gt; 的数量为奇数，中间的一项会被分裂，解决办法是在表格最后添加空白 &lt;code&gt;tr&lt;/code&gt;，凑成偶数。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS3 Timeline</title>
      <link>http://peters-playground.com/2013/05/css3-timeline</link>
      <pubDate>10 May 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/05/css3-timeline</guid>
      <description>&lt;p&gt;&lt;a href=&quot;http://cdpn.io/lGewF&quot;&gt;&lt;img src=&quot;/assets/images/codepen/css-timeline.png&quot; alt=&quot;CSS3 Timeline&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;用 CSS 写的 Timeline 效果，展示地址：&lt;a href=&quot;http://cdpn.io/lGewF&quot;&gt;http://cdpn.io/lGewF&lt;/a&gt;，点击页面左下角 &quot;Edit this Pen&quot; 查看源码。与上一个&lt;a href=&quot;http://cdpn.io/HGdir&quot;&gt;CSS3 Slider 模仿练习&lt;/a&gt;使用的方法基本相同，额外记录一点经验心得：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sass&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-webkit-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-moz-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-o-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-ms-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-webkit-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-moz-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-o-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;-ms-transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;像上面这样设定 &lt;code&gt;transition&lt;/code&gt; 属性，当鼠标悬停在元素上时，使用 &lt;code&gt;a:hover&lt;/code&gt; 的变化样式，当鼠标离开时，使用 &lt;code&gt;a&lt;/code&gt; 的变化样式。如果 &lt;code&gt;a:hover&lt;/code&gt; 没有设定变化样式，鼠标悬停或离开都使用 &lt;code&gt;a&lt;/code&gt; 的样式。&lt;/p&gt;

&lt;p&gt;补充，后来加入了横版效果，为了控制条目的宽度和美观，标题超出部分使用 &lt;code&gt;…&lt;/code&gt; 表示，代码片段为：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sass&quot;&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nowrap&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;text-overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ellipsis&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;hidden&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;block&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Visited 选择器的使用限制</title>
      <link>http://peters-playground.com/2013/04/visited-selector</link>
      <pubDate>24 Apr 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/04/visited-selector</guid>
      <description>&lt;p&gt;尝试给访问过的链接添加样式，结果遇到了问题，代码如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;link&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;link&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:visited:before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-&amp;quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;链接被点击后，只有 Opera 浏览器正常显示替换后的内容，其他浏览器全部失败。百思不得其解，提问后才知道，&lt;code&gt;:visited&lt;/code&gt; 使用是有限制的：只能变化 &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;background-color&lt;/code&gt;, &lt;code&gt;border-*-color&lt;/code&gt;, &lt;code&gt;outline-color&lt;/code&gt;, 以及 &lt;code&gt;column-rule-color&lt;/code&gt; 等与颜色有关的属性，不可以改变其他属性。&lt;code&gt;content&lt;/code&gt; 不在这个范围内，自然不能工作了（ Opera 是不是太超前了，呵呵）。&lt;/p&gt;

&lt;p&gt;相关文章：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS/Privacy_and_the_%3avisited_selector&quot;&gt;Privacy and the :visited selector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dbaron.org/mozilla/visited-privacy#limits&quot;&gt;Preventing attacks on a user&#39;s history through CSS :visited selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hacks.mozilla.org/2010/03/privacy-related-changes-coming-to-css-vistited/&quot;&gt;privacy-related changes coming to CSS :visited&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>Sublime Text 的个人设置</title>
      <link>http://peters-playground.com/2013/04/sublime-test</link>
      <pubDate>20 Apr 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/04/sublime-test</guid>
      <description>&lt;h2&gt;自定义设置&lt;/h2&gt;

&lt;p&gt;以下是 Peter 用着比较顺手的 Sublime Text 设置，其中 &lt;code&gt;wide_caret&lt;/code&gt; 是个隐藏属性，大尺寸光标视觉效果更好。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;caret_style&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;phase&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;close_windows_when_empty&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;color_scheme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Packages/Syntax highlighting for Sass/Color Scheme/Solarized (Light).tmTheme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;dictionary&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Packages/Language - English/en_GB.dic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;drag_text&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;draw_white_space&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;font_face&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Consolas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;font_size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;18.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;highlight_line&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ignored_packages&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Vintage&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;indent_to_bracket&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;soda_classic_tabs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;tab_size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;theme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Soda Light.sublime-theme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;translate_tabs_to_spaces&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;trim_trailing_white_space_on_save&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;wide_caret&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;word_wrap&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;自定义 Soda 主题的侧边栏与 Minimap&lt;/h2&gt;

&lt;p&gt;这个主题好用没的说，美中不足的是侧边栏字体太小，研究了一下自定义的方法：在 User 文件夹中 (Packages 文件夹内) 创建名为 &lt;code&gt;Soda Light.sublime-theme&lt;/code&gt; 或者 &lt;code&gt;Soda Dark.sublime-theme&lt;/code&gt; 的文件，然后输入以下代码：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sidebar_tree&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;row_padding&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sidebar_label&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;font.size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;13.5&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;minimap_control&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;viewport_color&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;第一条调整侧边栏条目的间距，第二条调整字体大小。第三条用于调整 Minimap 窗口的颜色，使用深色系的 Color Scheme 时窗口通常不容易分辨，修改这一条就可以了（RGBA 格式）。其他设置可以在 Soda 文件夹内找到，选中需要修改的项目复制粘贴到这个文件里，即使 Soda 更新也不担心丢失设置。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emmet CSS Snippets</title>
      <link>http://peters-playground.com/2013/04/emmet-css-snippets</link>
      <pubDate>16 Apr 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/04/emmet-css-snippets</guid>
      <description>&lt;p&gt;介绍一下 &lt;a href=&quot;https://github.com/P233/Emmet-Css-Snippets-for-Sublime-Text-2&quot;&gt;Emmet CSS Snippets&lt;/a&gt; 吧，半年前将 Zen Coding 的 CSS 缩写整理成为 Sublime Text 2 自动补完，400 多个非常琐碎，花了不少时间，刚整理完毕 Emmet 就发布了，所以也跟着改了名字。特色功能主要有以下几点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;包含 CSS 值的 snippet 都会在“分号”后自动换行，但如果在属性之间插入 CSS 属性，也会在后面添加多余的一行。建议自上而下书写 CSS 属性，然后用 &lt;a href=&quot;http://CSScomb.com&quot;&gt;CSScomb 工具&lt;/a&gt; 重新排列顺序；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果 snippet 中包含 &quot;{ }&quot; , 会在 &quot;}&quot; 后插入新的一行，方便通过 &lt;kbd&gt;Command&lt;/kbd&gt; + &lt;kbd&gt;Down_Arrow&lt;/kbd&gt; 快捷键（有时 &lt;kbd&gt;Tab&lt;/kbd&gt; 键）让光标跳出 &quot;{ }&quot;，然后开始书写新的一段 CSS；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于 Sublime Text 2 的模糊搜索功能，不需要输入缩写中的“冒号”，部分缩写可以不输入完整，比如 &lt;code&gt;bdrsa =&amp;gt; border-radius&lt;/code&gt; 但输入 &lt;code&gt;bra&lt;/code&gt; 就可以了。整理了一份缩写简化列表，请查看 &lt;a href=&quot;http://p233.github.com/Emmet-Css-Snippets-for-Sublime-Text-2/&quot;&gt;Snippets List&lt;/a&gt;；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Emmet 中只用到一个字母的缩写改为使用前三个字母作为缩写（例如, &lt;code&gt;mar =&amp;gt; margin:&lt;/code&gt;, &lt;code&gt;wid =&amp;gt; width:&lt;/code&gt;），&lt;code&gt;widows&lt;/code&gt; 属性使用完整拼写，这样做是为了提高自动提示的准确度。更多变更请查看 &lt;a href=&quot;http://p233.github.com/Emmet-Css-Snippets-for-Sublime-Text-2/&quot;&gt;Snippets List&lt;/a&gt;；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;缩写不能包含符号，所以做出以下更改：&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;imp&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;mp&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ffa&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ffa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* 同理，包含 &amp;quot;+&amp;quot; 的缩写不能直接输入，需要手动选择 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ipt&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;important&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;&lt;p&gt;某些 snippets 中可用 &lt;kbd&gt;Tab&lt;/kbd&gt; 键切换光标位置。例如，编辑完注释后按下 &lt;kbd&gt;Tab&lt;/kbd&gt; 键，光标跳出注释进入新的一行。按下 &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;Tab&lt;/kbd&gt; 组合键，光标返回上一位置；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;部分 CSS 属性添加了浏览器前缀；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;添加了额外的 snippets, 请查看 &lt;a href=&quot;http://p233.github.com/Emmet-Css-Snippets-for-Sublime-Text-2/&quot;&gt;Snippets List&lt;/a&gt;&lt;/strong&gt;；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;增加了 Sass 函数自动完成提示，函数列表请查看 &lt;a href=&quot;http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html&quot;&gt;Sass 函数列表&lt;/a&gt;；&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;截止到目前下载量已超过两万六千多次，有点出乎意料，不过这个插件还不够完善，需要进一步提高书写 CSS 的准确度：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;自动换行，这是一把双刃剑，在写好的 CSS 中插入一段会产生多余的空行。Emmet 没有加入这个功能，因为想要一种流畅感，所以加入了，使用过程中会带来很多不必要的删除空行的操作，有时也的确方便，如何取舍呢；&lt;/li&gt;
&lt;li&gt;不再包含浏览器前缀？写 CSS 动画，尤其是使用 &lt;code&gt;@keyframes&lt;/code&gt; 时，因为前缀的的关系整个文件会变得非常啰嗦，也不方便阅读，最近开始使用 &lt;a href=&quot;http://leaverou.github.io/prefixfree/&quot;&gt;Prefix free&lt;/a&gt;，gzip 压缩后只有 2kb 算起来两个 &lt;code&gt;@keyframes&lt;/code&gt; 就抵消掉了；&lt;/li&gt;
&lt;li&gt;进一步优化 snippets 的缩写，让每个 snippet 都能通过独一无二的缩写触发，不互相影响；&lt;/li&gt;
&lt;li&gt;Sublime Text 3 的原生 CSS 插件（可以影响到 LESS）在输入 id，class 时禁用任何 snippet，Syntax hightailing for Sass 也加入了这个功能，下一步，希望能令输入 property value 时不提示 property name 相关 snippets，暂时还没有想到实现的办法；&lt;/li&gt;
&lt;li&gt;加入 Compass 自动补完？&lt;/li&gt;
&lt;li&gt;待续。。。&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;不过在 Snippets 层面上能够做到的终须有限，期待 Emmet 添加更多的功能，进一步提高 CSS 的书写效率。是否存在更好的办法呢？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关注 CSS 性能 (二)</title>
      <link>http://peters-playground.com/2013/04/css-performance-2</link>
      <pubDate>15 Apr 2013</pubDate>
      <author>Peter</author>
      <guid>http://peters-playground.com/2013/04/css-performance-2</guid>
      <description>&lt;p&gt;如何写 CSS 令浏览器的执行效率最高呢？翻译一篇 Chris Coyier 的 &lt;a href=&quot;http://css-tricks.com/efficiently-rendering-css/&quot;&gt;Efficiently Rendering CSS&lt;/a&gt; 帮助理清思路。此外，Google 也有一篇更详细的讲解文章 &lt;a href=&quot;https://developers.google.com/speed/docs/best-practices/rendering&quot;&gt;Optimize browser rendering&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;第一，浏览器读 CSS 的顺序是&lt;strong&gt;从右往左&lt;/strong&gt;，比如  &lt;code&gt;ul &amp;gt; li a[title=&quot;home&quot;]&lt;/code&gt;，最先被读到的第一部分是 &lt;code&gt;a[title=&quot;home&quot;]&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;第二，效率由高到低的选择器依次是 ID, class, tag, universal ：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#main-navigation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;/* ID (Fastest) */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.home&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#page-wrap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* ID */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.main-navigation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;/* Class */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.current&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;/* Class *&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;ul {   }                    /* Tag */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;                &lt;span class=&quot;c&quot;&gt;/* Tag */&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;                     &lt;span class=&quot;c&quot;&gt;/* Universal (Slowest) */&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;#content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;home&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;/* Universal */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;因为浏览器从右往左读，&lt;code&gt;#main-nav &amp;gt; li {}&lt;/code&gt; 这一句即使用到了 id 选择器，实际效率却不会提升多少。&lt;/p&gt;

&lt;p&gt;第三，不需要这样写 &lt;code&gt;ul#main-navigation {}&lt;/code&gt;，因为 ID 已经是独一无二的了，同理，tag 也要尽可能地避免与 class 一同使用。&lt;/p&gt;

&lt;p&gt;第四，后代选择器是性能最差的，尤其是后代中包含 tag 或者 universal 选择器，比如 &lt;code&gt;html body ul li a {}&lt;/code&gt; 简直是一场灾难。&lt;/p&gt;

&lt;p&gt;第五，浏览器如果发现某个选择器不能匹配任何元素，将会立即终止尝试，开始匹配下一个选择器，从而提高执行效率。&lt;/p&gt;

&lt;p&gt;第六，重新思考一下为什么要这样写，是不是还有优化的可能呢？比如利用元素的继承性可以省下很多不必要的设定。&lt;/p&gt;

&lt;p&gt;第七，如果很在意性能，尽量少用 CSS3 选择器。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>